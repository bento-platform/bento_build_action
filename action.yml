name: "Bento Build"
description: "Composite GitHub action for building Bento images"
inputs:
  registry:
    description: "Container registry"
    required: true
  registry-username:
    description: "Container registry username"
    required: true
  registry-password:
    description: "Container registry password"
    required: true
  image-name:
    description: "Image name"
    required: true
  development-dockerfile:
    description: "Development Dockerfile path"
    required: true
    default: "dev.Dockerfile"
  dockerfile:
    description: "Dockerfile path"
    required: true
    default: "Dockerfile"
  build-args:
    description: "Docker build arguments"
    required: true
    default: ""
  context:
    description: "Docker build context"
    required: true
    default: "."
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log into the container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Set up development image metadata
      id: meta-dev
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ inputs.image-name }}
        flavor: |
          latest=false
        tags: |
          type=semver,pattern={{version}},suffix=-dev
          type=semver,pattern={{major}}.{{minor}},suffix=-dev
          type=raw,value=latest-dev,enable=${{ github.event_name == 'release' }}
          type=raw,value=edge-dev,enable={{is_default_branch}}
          type=ref,event=pr,suffix=-dev
          type=sha,prefix=sha-,suffix=-dev

    - name: Build and push development image
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.development-dockerfile }}
        build-args: ${{ inputs.build-args }}
        push: true
        tags: ${{ steps.meta-dev.outputs.tags }}
        labels: ${{ steps.meta-dev.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set up edge image metadata
      id: meta-edge
      uses: docker/metadata-action@v4
      if: ${{ github.event_name != 'release' }}
      with:
        images: |
          ${{ inputs.image-name }}
        flavor: |
          latest=false
        tags: |
          type=raw,value=edge,enable={{is_default_branch}}
          type=ref,event=pr
          type=sha,prefix=sha-

    - name: Build and push edge image
      uses: docker/build-push-action@v3
      if: ${{ github.event_name != 'release' }}
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        push: true
        tags: ${{ steps.meta-edge.outputs.tags }}
        labels: ${{ steps.meta-edge.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set up release image metadata
      id: meta
      uses: docker/metadata-action@v4
      if: ${{ github.event_name == 'release' }}
      with:
        images: |
          ${{ inputs.image-name }}
        flavor: |
          latest=true
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push release image
      uses: docker/build-push-action@v3
      if: ${{ github.event_name == 'release' }}
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
